                        (w._customBlock_steamachieve = function(t, s) {
                        		if (-1 != b.engine.getGameAttribute("SteamAchieve")[0 | t]) {
                        			var a = b.engine.getGameAttribute("SteamAchieve"),
                        				r = b.engine.getGameAttribute("SteamAchieve")[0 | t];
                        			(a[0 | t] = Math.floor(parseNum(r) + s)),
                        			1 == E.isElectron() && -1 == h.getCurrentSceneName().indexOf("Tutorial") && "PlayerSelect" != h.getCurrentSceneName() && "PlayerSwap" != h.getCurrentSceneName() && "GemShop" != h.getCurrentSceneName() && "PlayerSwap" != h.getCurrentSceneName() && ((s = null == (s = b.engine.getGameAttribute("SteamAchieve")[0 | t]) ? 0 : "number" == typeof s ? d.__cast(s, k) : "number" == typeof s && (0 | s) === s ? d.__cast(s, l) : "boolean" == typeof s ? d.__cast(s, n) ? 1 : 0 : "string" == typeof s ? parseFloat(s) : parseFloat(g.string(s))),
                        				(a = b.engine.getGameAttribute("CustomLists")), s >= (null == (a = (null != e.SteamAchieves ? a.getReserved("SteamAchieves") : a.h.SteamAchieves)[0 | t][0]) ? 0 : "number" == typeof a ? d.__cast(a, k) : "number" == typeof a && (0 | a) === a ? d.__cast(a, l) : "boolean" == typeof a ? d.__cast(a, n) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(g.string(a))) && (E.areaCheck("Achieve" + Math.round(t)),
                        					(b.engine.getGameAttribute("SteamAchieve")[0 | t] = -1),
                        					(s = b.engine.getGameAttribute("DNSM")), null != e.SteamAchievedTrigger ? s.setReserved("SteamAchievedTrigger", t) : (s.h.SteamAchievedTrigger = t), b.engine.getGameAttribute("PixelHelperActor")[7].shout("_customEvent_SteamAchieveDrops"),
                        					(s = b.engine.getGameAttribute("CustomLists")),
                        					(t = (null != e.AchSteam2Reg ? s.getReserved("AchSteam2Reg") : s.h.AchSteam2Reg)[0 | t]), w._customBlock_Reg_ach_add_status(parseNum(t), 2)));
                        		}
                        	}