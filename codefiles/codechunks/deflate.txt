                            (n.deflate = function(e, t) {
                            		var n, i;
                            		if (!e || !e.state || 5 < t || 0 > t) return e ? s(e, D) : D;
                            		if (((i = e.state), !e.output || (!e.input && 0 !== e.avail_in) || (666 === i.status && t !== _))) return s(e, 0 === e.avail_out ? -5 : D);
                            		if (((i.strm = e), (n = i.last_flush), (i.last_flush = t), i.status === Q))
                            			if (2 === i.wrap)
                            				(e.adler = 0),
                            				l(i, 31),
                            				l(i, 139),
                            				l(i, 8),
                            				i.gzhead ? (l(i, (i.gzhead.text ? 1 : 0) + (i.gzhead.hcrc ? 2 : 0) + (i.gzhead.extra ? 4 : 0) + (i.gzhead.name ? 8 : 0) + (i.gzhead.comment ? 16 : 0)), l(i, 255 & i.gzhead.time), l(i, (i.gzhead.time >> 8) & 255), l(i, (i.gzhead.time >> 16) & 255), l(i, (i.gzhead.time >> 24) & 255), l(i, 9 === i.level ? 2 : 2 <= i.strategy || 2 > i.level ? 4 : 0), l(i, 255 & i.gzhead.os), i.gzhead.extra && i.gzhead.extra.length && (l(i, 255 & i.gzhead.extra.length), l(i, (i.gzhead.extra.length >> 8) & 255)), i.gzhead.hcrc && (e.adler = v(e.adler, i.pending_buf, i.pending, 0)),
                            					(i.gzindex = 0),
                            					(i.status = 69)) : (l(i, 0), l(i, 0), l(i, 0), l(i, 0), l(i, 0), l(i, 9 === i.level ? 2 : 2 <= i.strategy || 2 > i.level ? 4 : 0), l(i, 3), (i.status = X));
                            			else {
                            				var g = (U + ((i.w_bits - 8) << 4)) << 8;
                            				(g |= (2 <= i.strategy || 2 > i.level ? 0 : 6 > i.level ? 1 : 6 === i.level ? 2 : 3) << 6),
                            				0 !== i.strstart && (g |= 32),
                            					(i.status = X),
                            					o(i, g + (31 - (g % 31))),
                            					0 !== i.strstart && (o(i, e.adler >>> 16), o(i, 65535 & e.adler)),
                            					(e.adler = 1);
                            			}
                            		if (69 === i.status)
                            			if (i.gzhead.extra) {
                            				for (g = i.pending; i.gzindex < (65535 & i.gzhead.extra.length) && (i.pending !== i.pending_buf_size || (i.gzhead.hcrc && i.pending > g && (e.adler = v(e.adler, i.pending_buf, i.pending - g, g)), r(e), (g = i.pending), i.pending !== i.pending_buf_size));) l(i, 255 & i.gzhead.extra[i.gzindex]), i.gzindex++;
                            				i.gzhead.hcrc && i.pending > g && (e.adler = v(e.adler, i.pending_buf, i.pending - g, g)), i.gzindex === i.gzhead.extra.length && ((i.gzindex = 0), (i.status = 73));
                            			} else i.status = 73;
                            		if (73 === i.status)
                            			if (i.gzhead.name) {
                            				g = i.pending;
                            				do {
                            					if (i.pending === i.pending_buf_size && (i.gzhead.hcrc && i.pending > g && (e.adler = v(e.adler, i.pending_buf, i.pending - g, g)), r(e), (g = i.pending), i.pending === i.pending_buf_size)) {
                            						var m = 1;
                            						break;
                            					}
                            					(m = i.gzindex < i.gzhead.name.length ? 255 & i.gzhead.name.charCodeAt(i.gzindex++) : 0), l(i, m);
                            				} while (0 !== m);
                            				i.gzhead.hcrc && i.pending > g && (e.adler = v(e.adler, i.pending_buf, i.pending - g, g)), 0 === m && ((i.gzindex = 0), (i.status = 91));
                            			} else i.status = 91;
                            		if (91 === i.status)
                            			if (i.gzhead.comment) {
                            				g = i.pending;
                            				do {
                            					if (i.pending === i.pending_buf_size && (i.gzhead.hcrc && i.pending > g && (e.adler = v(e.adler, i.pending_buf, i.pending - g, g)), r(e), (g = i.pending), i.pending === i.pending_buf_size)) {
                            						m = 1;
                            						break;
                            					}
                            					(m = i.gzindex < i.gzhead.comment.length ? 255 & i.gzhead.comment.charCodeAt(i.gzindex++) : 0), l(i, m);
                            				} while (0 !== m);
                            				i.gzhead.hcrc && i.pending > g && (e.adler = v(e.adler, i.pending_buf, i.pending - g, g)), 0 === m && (i.status = 103);
                            			} else i.status = 103;
                            		if (
                            			(103 === i.status && (i.gzhead.hcrc ? (i.pending + 2 > i.pending_buf_size && r(e), i.pending + 2 <= i.pending_buf_size && (l(i, 255 & e.adler), l(i, (e.adler >> 8) & 255), (e.adler = 0), (i.status = X))) : (i.status = X)), 0 !== i.pending)) {
                            			if ((r(e), 0 === e.avail_out)) return (i.last_flush = -1), I;
                            		} else if (0 === e.avail_in && (t << 1) - (4 < t ? 9 : 0) <= (n << 1) - (4 < n ? 9 : 0) && t !== _) return s(e, -5);
                            		if (666 === i.status && 0 !== e.avail_in) return s(e, -5);
                            		if (0 !== e.avail_in || 0 !== i.lookahead || (t !== N && 666 !== i.status)) {
                            			if (2 === i.strategy) e: {
                            				for (var d;;) {
                            					if (0 === i.lookahead && (u(i), 0 === i.lookahead)) {
                            						if (t === N) {
                            							var c = L;
                            							break e;
                            						}
                            						break;
                            					}
                            					if (((i.match_length = 0), (d = y._tr_tally(i, 0, i.window[i.strstart])), i.lookahead--, i.strstart++, d && (A(i, !1), 0 === i.strm.avail_out))) {
                            						c = L;
                            						break e;
                            					}
                            				}
                            				(i.insert = 0),
                            				(c = t === _ ? (A(i, !0), 0 === i.strm.avail_out ? Y : W) : i.last_lit && (A(i, !1), 0 === i.strm.avail_out) ? L : z);
                            			}
                            			else if (3 === i.strategy) e: {
                            				var p, h;
                            				for (d = i.window;;) {
                            					if (i.lookahead <= k) {
                            						if ((u(i), i.lookahead <= k && t === N)) {
                            							c = L;
                            							break e;
                            						}
                            						if (0 === i.lookahead) break;
                            					}
                            					if (((i.match_length = 0), i.lookahead >= w && 0 < i.strstart && (p = d[(h = i.strstart - 1)]) === d[++h] && p === d[++h] && p === d[++h])) {
                            						for (n = i.strstart + k; p === d[++h] && p === d[++h] && p === d[++h] && p === d[++h] && p === d[++h] && p === d[++h] && p === d[++h] && p === d[++h] && h < n;);
                            						(i.match_length = k - (n - h)), i.match_length > i.lookahead && (i.match_length = i.lookahead);
                            					}
                            					if (
                            						(i.match_length >= w ? ((c = y._tr_tally(i, 1, i.match_length - w)), (i.lookahead -= i.match_length), (i.strstart += i.match_length), (i.match_length = 0)) : ((c = y._tr_tally(i, 0, i.window[i.strstart])), i.lookahead--, i.strstart++), c && (A(i, !1), 0 === i.strm.avail_out))) {
                            						c = L;
                            						break e;
                            					}
                            				}
                            				(i.insert = 0),
                            				(c = t === _ ? (A(i, !0), 0 === i.strm.avail_out ? Y : W) : i.last_lit && (A(i, !1), 0 === i.strm.avail_out) ? L : z);
                            			}
                            			else c = Z[i.level].func(i, t);
                            			if (((c !== Y && c !== W) || (i.status = 666), c === L || c === Y)) return 0 === e.avail_out && (i.last_flush = -1), I;
                            			if (c === z && (1 === t ? y._tr_align(i) : 5 !== t && (y._tr_stored_block(i, 0, 0, !1), 3 === t && (a(i.head), 0 === i.lookahead && ((i.strstart = 0), (i.block_start = 0), (i.insert = 0)))), r(e), 0 === e.avail_out)) return (i.last_flush = -1), I;
                            		}
                            		return t !== _ ? I : 0 >= i.wrap ? 1 : (2 === i.wrap ? (l(i, 255 & e.adler), l(i, (e.adler >> 8) & 255), l(i, (e.adler >> 16) & 255), l(i, (e.adler >> 24) & 255), l(i, 255 & e.total_in), l(i, (e.total_in >> 8) & 255), l(i, (e.total_in >> 16) & 255), l(i, (e.total_in >> 24) & 255)) : (o(i, e.adler >>> 16), o(i, 65535 & e.adler)), r(e), 0 < i.wrap && (i.wrap = -i.wrap), 0 !== i.pending ? I : 1);
                            	}